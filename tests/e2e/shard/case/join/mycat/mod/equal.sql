select a.id,b.id,b.pad,a.t_id from test1 a,(select * from sbtest1.test2 where pad>3) b where a.t_id=b.o_id;
select test1.id,test1.t_id,test1.name,test1.pad,sbtest1.test2.id,sbtest1.test2.o_id,sbtest1.test2.name,sbtest1.test2.pad from test1 natural left join sbtest1.test2;
select test1.id,test1.t_id,test1.name,test1.pad,sbtest1.test2.id,sbtest1.test2.o_id,sbtest1.test2.name,sbtest1.test2.pad from test1 natural right join sbtest1.test2;
select test1.id,test1.t_id,test1.name,test1.pad,sbtest1.test2.id,sbtest1.test2.o_id,sbtest1.test2.name,sbtest1.test2.pad from test1 natural left outer join sbtest1.test2;
select test1.id,test1.t_id,test1.name,test1.pad,sbtest1.test2.id,sbtest1.test2.o_id,sbtest1.test2.name,sbtest1.test2.pad from test1 natural right outer join sbtest1.test2;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural left join sbtest1.test2 b order by a.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural right join sbtest1.test2 b order by b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural left outer join sbtest1.test2 b order by a.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural right outer join sbtest1.test2 b order by b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural left join (select * from sbtest1.test2 where pad>2) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural right join (select * from sbtest1.test2 where pad>2) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural left outer join (select * from sbtest1.test2 where pad>2) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from test1 a natural right outer join (select * from sbtest1.test2 where pad>2) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from (select * from test1 where pad>1) a natural left join (select * from sbtest1.test2 where pad>3) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from (select * from test1 where pad>1) a natural right join (select * from sbtest1.test2 where pad>3) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from (select * from test1 where pad>1) a natural left outer join (select * from sbtest1.test2 where pad>3) b order by a.id,b.id;
select a.id,a.t_id,a.name,a.pad,b.id,b.o_id,b.name,b.pad from (select * from test1 where pad>1) a natural right outer join (select * from sbtest1.test2 where pad>3) b order by a.id,b.id;
select distinct b.pad,a.pad from test1 a,(select * from sbtest1.test2 where pad=1) b where a.t_id=b.o_id;
select count(distinct id),sum(distinct name) from test1 where id=3 or id=7;
select id,FirstName,lastname,department,salary from test4 use index(ID_index) where  Department ='Finance';
select id,FirstName,lastname,department,salary from test4 force index(ID_index) where ID= 205;
SELECT FirstName, LastName,Department = CASE Department WHEN 'F' THEN 'Financial' WHEN 'D' THEN 'Development'  ELSE 'Other' END FROM test4;
select id,FirstName,lastname,department,salary from test4 where Salary >'40000' and Salary <'70000' and Department ='Finance';
SELECT count(*), Department  FROM (SELECT * FROM test4 ORDER BY FirstName DESC) AS Actions GROUP BY Department ORDER BY ID DESC;
select id,FirstName,lastname,department,salary from test4 order by ID ASC;
select Department,max(Salary) from test4 group by Department order by Department asc;
select Department,min(Salary) from test4 group by Department order by Department asc;
select Department,sum(Salary) from test4 group by Department order by Department asc;
select ID,Department,Salary from test4 order by 2,3;
select id,FirstName,lastname,department,salary from test4 order by Department ,ID desc;
SELECT Department, COUNT(Salary) FROM test4 GROUP BY Department;
SELECT Department, COUNT(Salary) FROM test4 GROUP BY Department DESC;
select Department,count(Salary) as a from test4 group by Department having a>0;
select Department from test4 having Department >3;
select Department from test4 where Department >0;
select Department,max(salary) from test4 group by Department having max(salary) >10;
select 12 as Department, Department from test4 group by Department;
select max(salary) from test4 group by department order by department asc;
select min(salary) from test4 group by department order by department asc;
select sum(salary) from test4 group by department order by department asc;
select count(salary) from test4 group by department order by department asc;
select Department,sum(Salary) a from test4 group by Department having a >=1 order by Department DESC;
select FirstName,LastName,Department,ABS(salary) from test4 order by Department;
select FirstName,LastName,Department,ACOS(salary) from test4 order by Department;
select FirstName,LastName,Department,ASIN(salary) from test4 order by Department;
select FirstName,LastName,Department,ATAN(salary) from test4 order by Department;
select FirstName,LastName,Department,ATAN(salary,100) from test4 order by Department;
select FirstName,LastName,Department,ATAN2(salary,100) from test4 order by Department;
select FirstName,LastName,Department,CEIL(salary) from test4 order by Department;
select FirstName,LastName,Department,CEILING(salary) from test4 order by Department;
select FirstName,LastName,Department,COT(salary) from test4 order by Department;
select FirstName,LastName,Department,CRC32(Department) from test4 order by Department;
select FirstName,LastName,Department,FLOOR(salary) from test4 order by Department;
select FirstName,LN(FirstName),LastName,Department from test4 order by Department;
select FirstName,LastName,Department,LOG(salary) from test4 order by Department;
select FirstName,LastName,Department,LOG2(salary) from test4 order by Department;
select FirstName,LastName,Department,LOG10(salary) from test4 order by Department;
select FirstName,LastName,Department,MOD(salary,2) from test4 order by Department;
select FirstName,LastName,Department,RADIANS(salary) from test4 order by Department;
select FirstName,LastName,Department,ROUND(salary) from test4 order by Department;
select FirstName,LastName,Department,SIGN(salary) from test4 order by Department;
select FirstName,LastName,Department,SIN(salary) from test4 order by Department;
select FirstName,LastName,Department,SQRT(salary) from test4 order by Department;
select FirstName,LastName,Department,TAN(salary) from test4 order by Department;
select FirstName,LastName,Department,TRUNCATE(salary,1) from test4 order by Department;
select FirstName,LastName,Department,TRUNCATE(salary*100,0) from test4 order by Department;
select FirstName,LastName,Department,SIN(salary) from test4 order by Department;
select id,FirstName,lastname,department,salary from test4 where Department is Null;
select id,FirstName,lastname,department,salary from test4 where Department is not Null;
select id,FirstName,lastname,department,salary from test4 where NOT (ID < 200);
select id,FirstName,lastname,department,salary from test4 where ID <300;
select id,FirstName,lastname,department,salary from test4 where ID <1;
select id,FirstName,lastname,department,salary from test4 where ID <> 0;
select id,FirstName,lastname,department,salary from test4 where ID <> 0 and ID <=1;
select id,FirstName,lastname,department,salary from test4 where ID >=205;
select id,FirstName,lastname,department,salary from test4 where ID <=205;
select id,FirstName,lastname,department,salary from test4 where ID >=205 and ID <=205;
select id,FirstName,lastname,department,salary from test4 where ID >1 and ID <=203;
select id,FirstName,lastname,department,salary from test4 where ID >=1 and ID=205;
select id,FirstName,lastname,department,salary from test4 where ID=(ID>>1)<<1;
select id,FirstName,lastname,department,salary from test4 where ID&1;
select id,FirstName,lastname,department,salary from test4 where Salary >'40000' and Salary <'70000' and Department ='Finance' order by Salary ASC;
select id,FirstName,lastname,department,salary from test4 where (Salary >'50000' and Salary <'70000') or Department ='Finance' order by Salary ASC;
select id,FirstName,lastname,department,salary from test4 where FirstName like 'J%';
select count(*) FROM test4 WHERE Salary is null or FirstName not like '%M%';
select id,FirstName,lastname,department,salary from test4 where FirstName in ('Mazojys','Syllauu','Tyoysww');
select id,FirstName,lastname,department,salary from test4 where Salary between 40000 and 50000;
select sum(salary) from test4 where department = 'Finance';
select max(salary) from test4 where department = 'Finance';
select min(salary) from test4 where department = 'Finance';
select CURRENT_USER FROM test5;
select sum(distinct id) from test5;
select sum(all id) from test5;
select id, R_REGIONKEY from test5;
select id,'user is user' from test5;
select id*5,'user is user',10 from test5;
select ALL id, R_REGIONKEY, R_NAME, R_COMMENT from test5;
select DISTINCT id, R_REGIONKEY, R_NAME, R_COMMENT from test5;
select DISTINCTROW id, R_REGIONKEY, R_NAME, R_COMMENT from test5;
select ALL HIGH_PRIORITY id,'ID' as detail  from test5;
select id, O_ORDERKEY, O_TOTALPRICE,MYDATE from test8 where id=1;
select id, O_ORDERKEY, O_TOTALPRICE,MYDATE from test8 where id=1 and not id=1;
select id,O_ORDERKEY,O_CUSTKEY,O_TOTALPRICE,MYDATE from test8 where id=1;
select count(*) counts from test8 a where MYDATE is null;
select count(*) counts from test8 a where id is null;
select count(*) counts from test8 a where id is not null;
select count(*) counts from test8 a where not (id is null);
select count(O_ORDERKEY) counts from test8 a where O_ORDERKEY like 'ORDERKEY_00%';
select count(O_ORDERKEY) counts from test8 a where O_ORDERKEY not like '%00%';
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where O_ORDERKEY<'ORDERKEY_010' and O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where O_ORDERKEY<'ORDERKEY_010' or O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where O_CUSTKEY in ('CUSTKEY_003','CUSTKEY_420','CUSTKEY_980') group by o_custkey;
select sum(O_TOTALPRICE) as sums,count(O_ORDERKEY) counts from test8 a where O_CUSTKEY not in ('CUSTKEY_003','CUSTKEY_420','CUSTKEY_980');
select O_CUSTKEY,case when sum(O_TOTALPRICE)<100000 then 'D' when sum(O_TOTALPRICE)>100000 and sum(O_TOTALPRICE)<1000000 then 'C' when sum(O_TOTALPRICE)>1000000 and sum(O_TOTALPRICE)<5000000 then 'B' else 'A' end as jibie  from test8 a group by O_CUSTKEY order by jibie, O_CUSTKEY limit 10;
select count(*) from test8 where MYDATE between concat(date_format('1992-05-01','%Y-%m'),'-00') and concat(date_format(date_add('1992-05-01',interval 2 month),'%Y-%m'),'-00');
select id,sum(O_TOTALPRICE) from test8 where id>1 and id<50 group by  id;
select id, O_ORDERKEY, O_TOTALPRICE,MYDATE from test8 group by id,O_ORDERKEY,MYDATE;
select count(id) as counts,date_format(MYDATE,'%Y-%m') as mouth,id from test8 where id>1 and id<50 group by 2 asc ,id desc;
select sum(O_TOTALPRICE ) as sums,id from test8 where id>1 and id<50 group by 2 asc having sums>2000000;
select sum(O_TOTALPRICE ) as sums,id from test8 where id>1 and id<50 group by 2 asc   having sums>2000000;
select sum(O_TOTALPRICE ) as sums,id,count(O_ORDERKEY) counts from test8 where id>1 and id<50 group by 2 asc   having count(O_ORDERKEY)>2;
select sum(O_TOTALPRICE ) as sums,id,count(O_ORDERKEY) counts from test8 where id>1 and id<50 group by 2 asc   having min(O_ORDERKEY)>10 and max(O_ORDERKEY)<10000000;
select sum(O_TOTALPRICE ) from test8 where id>1 and id<50 having min(O_ORDERKEY)<10000;
select id,O_ORDERKEY,O_TOTALPRICE from test8 where id>36900 and id<36902 group by O_ORDERKEY  having O_ORDERKEY in (select O_ORDERKEY from test8 group by id having sum(id)>10000);
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where O_CUSTKEY not between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test8 a where not (O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300') group by o_custkey;
select C_NAME from sbtest1.test6 where C_NAME like 'A__A';
select C_NAME from sbtest1.test6 where C_NAME like 'm___i';
select C_NAME from sbtest1.test6 where C_NAME like 'ch___i%%';
select C_NAME from sbtest1.test6 where C_NAME like 'ch___i%%' ESCAPE 'i';
select count(*) from sbtest1.test6 where C_NAME not like 'chen%';
select count(*) from sbtest1.test6 where not (C_NAME like 'chen%');
select C_NAME from sbtest1.test6 where C_NAME like binary 'chen%';
select C_NAME from sbtest1.test6 where C_NAME like 'chen%';
select C_NAME from sbtest1.test6 where  C_NAME  like concat('%','AM','%');
select C_NAME from sbtest1.test6 where  C_NAME  like concat('%','en','%');
select test8.O_ORDERKEY,test8.O_CUSTKEY,C_NAME from test6 CROSS join sbtest1.test8 using(id) order by test8.O_ORDERKEY,test8.O_CUSTKEY,C_NAME;
select a.c_CUSTKEY,a.C_NAME,b.O_ORDERKEY from sbtest1.test6 as a left join test8 b using(id) where a.C_CUSTKEY<'CUSTKEY_300';
select a.c_CUSTKEY,a.C_NAME,b.O_ORDERKEY from sbtest1.test6 as a left OUTER join test8 b using(id);
select a.c_CUSTKEY,a.C_NAME,b.O_ORDERKEY from test8 b right join sbtest1.test6 as a using(id) where a.c_CUSTKEY<'CUSTKEY_300';
select a.c_CUSTKEY,a.C_NAME,b.O_ORDERKEY from test8 b right join sbtest1.test6 as a  using(id);
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 where O_CUSTKEY between 'CUSTKEY_013' and 'CUSTKEY_050' group by 2 asc having O_CUSTKEY<(select max(c_custkey) from test7) order by o_custkey;   
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts,MYDATE from test9 use index (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 use key (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_800' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 use key (ORDERS_FK1) ignore index (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_800' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 ignore key (ORDERS_FK1) force index (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 ignore key (ORDERS_FK1) force index (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 use index for order by (ORDERS_FK1) ignore index for group by (ORDERS_FK1) where O_CUSTKEY between 1 and 50 group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 as a use index for group by (ORDERS_FK1) ignore index for join (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select sum(O_TOTALPRICE) as sums,O_CUSTKEY,count(O_ORDERKEY) counts from test9 a use index for join (ORDERS_FK1) ignore index for join (ORDERS_FK1) where O_CUSTKEY between 'CUSTKEY_002' and 'CUSTKEY_300' group by o_custkey;
select O_ORDERKEY,O_CUSTKEY from test9 as a where a.O_CUSTKEY<=(select min(C_CUSTKEY)+1 from test7);
select count(*) from test9 as a where a.id <> all(select id from test7);
select count(*) from test9 as a where 56000< all(select id from test7);
/*comment*/ /*comment*/ select col1 /* this is a comment */ from t;
SELECT /*!40001 SQL_NO_CACHE */ * FROM t WHERE 1 limit 0, 2000;
SELECT * FROM t;
SELECT * FROM t AS u;
SELECT DISTINCT * FROM t;
SELECT DISTINCTROW * FROM t;
SELECT ALL * FROM t;
SELECT id FROM t;
SELECT * FROM t WHERE 1 = 1;
select 1 from t;
select 1 from t limit 1;
select 1 from t where not exists (select 2);
select * from sbtest1.t1 where id > 4 and id <=8 order by col1 desc;
select 1 as a from t order by a;
select * from sbtest1.t1 where id > 1 order by id desc limit 10;
select * from sbtest1.t2 where id < 0;
select 1 as a from t where 1 < any (select 2) order by a;
SELECT * from t for update;
SELECT * from t lock in share mode;
select * from t1 right join t2 on t1.id = t2.id left join t3 on t3.id = t2.id;
select * from t1 right join t2 using (id) left join t3 using (id);
select * from t1 natural join t2;
select * from t1 natural right join t2;
select * from t1 natural left outer join t2;
select * from t1 straight_join t2 on t1.id = t2.id;
select straight_join * from t1 join t2 on t1.id = t2.id;
select straight_join * from t1 left join t2 on t1.id = t2.id;
select straight_join * from t1 right join t2 on t1.id = t2.id;
select straight_join * from t1 straight_join t2 on t1.id = t2.id;
SELECT *, CAST(col1 AS CHAR CHARACTER SET utf8) FROM t;
select max(distinct col1) from t;
select max(distinctrow col1) from t;
select max(distinct all col1) from t;
select max(distinctrow all col1) from t;
select max(col2) from t;
select min(distinct col1) from t;
select min(distinctrow col1) from t;
select min(distinct all col1) from t;
select min(col2) from t;
select sum(distinct col1) from t;
select sum(distinctrow col1) from t;
select sum(distinct all col1) from t;
select sum(distinctrow all col1) from t;
select sum(col2) from t;
select count(col1) from t;
select count(*) from t;
select count(all col1) from t;
select group_concat(col2,col1) from t group by col1;
select group_concat(distinct col2,col1) from t group by col1;
select group_concat(distinctrow col2,col1) from t group by col1;
SELECT col1, GROUP_CONCAT(DISTINCT col2 ORDER BY col2 DESC SEPARATOR ' ') FROM t GROUP BY col1;
select * from t a;
select * from t as a;
select * from t use index (primary);
select * from t use index (`primary`);
select * from t use index ();
select * from t use index (idx1);
select * from t use index (idx1, idx2);
select * from t ignore key (idx1);
select * from t force index for join (idx1);
select * from t use index for order by (idx1);
select * from t force index for group by (idx1);
select high_priority * from t;
select SQL_CACHE * from t;
select * from t;
select col1 from t1 group by col1 order by null;
select col1 from t1 group by col1 order by 1;
select a.id,b.id,b.pad,a.t_id from test1 a,(select all * from sbtest1.test2) b where a.t_id=b.o_id;
select a.id,b.id,b.pad,a.t_id from test1 a,(select distinct * from sbtest1.test2) b where a.t_id=b.o_id;
select id,o_id,name,pad from (select * from sbtest1.test2 a group by a.id) a;
select * from (select pad,count(*) from sbtest1.test2 a group by pad) a;
select a.id,b.id,b.pad,a.t_id from test1 a,(select * from sbtest1.test2 having pad>3) b where a.t_id=b.o_id;
select a.id,b.id,b.pad,a.t_id from test1 a,(select * from sbtest1.test2 where pad>3 order by id) b where a.t_id=b.o_id;
select a.id,b.id,b.pad,a.t_id from test1 a,(select * from sbtest1.test2 where pad>3) b where a.t_id=b.o_id;
select pad,count(*) from (select * from test1 where pad>2) a group by pad;
select pad,count(*) from (select * from test1 where pad>2) a group by pad order by pad;
select count(*) from (select pad,count(*) a from test1 group by pad) a;
select a.id,b.id,b.pad,a.t_id from test1 a,(select * from sbtest1.test2 where pad>3) b where a.t_id=b.o_id;
select id,pad from test1 where pad=(select pad from test1 where id=2);
select id,t_id,name,pad from test1 where 2 >any(select id from test1 where pad>1);
select id,t_id,name,pad from test1 where 2>all(select id from test1 where pad<1);
select * from (select m.id,n.pad from test1 m,sbtest1.test2 n where m.id=n.id AND m.name='test中id为1' and m.pad>7 and m.pad<10)a;
select a.id,b.id,b.pad,a.t_id from (select id,t_id from test1) a,(select * from sbtest1.test2) b where a.t_id=b.o_id;
select co1,co2,co3 from (select id as co1,name as co2,pad as co3 from test1)as tb where co1>1;


# show
show columns in t1;
show columns from t1;
show full columns from t1;
show table status like 'aly_o%'/*allow_diff*/;
show open tables from sbtest1 like 'aly_o%';
show tables;
show full tables;
show tables like 'aly_o%';
show databases like 'sbtest1';
show schemas like 'sbtest1';
